// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(MmorpgContext))]
    [Migration("20240822064710_initialData")]
    partial class initialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.Character", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Health = 100,
                            Name = "Hunter",
                            Skill = "Hunting"
                        },
                        new
                        {
                            ID = 2,
                            Health = 100,
                            Name = "Mage",
                            Skill = "Spell"
                        },
                        new
                        {
                            ID = 3,
                            Health = 100,
                            Name = "Rogue",
                            Skill = "Stab"
                        },
                        new
                        {
                            ID = 4,
                            Health = 100,
                            Name = "Warrior",
                            Skill = "Slash"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CharacterId");

                    b.HasIndex("RaceId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DataAccess.Entities.Race", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Energy = 175,
                            Intelligence = 75,
                            Name = "Dwarf"
                        },
                        new
                        {
                            ID = 2,
                            Energy = 150,
                            Intelligence = 250,
                            Name = "Elf"
                        },
                        new
                        {
                            ID = 3,
                            Energy = 150,
                            Intelligence = 150,
                            Name = "Human"
                        },
                        new
                        {
                            ID = 4,
                            Energy = 250,
                            Intelligence = 20,
                            Name = "Orc"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Weapon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Damage = 10,
                            Name = "Staff"
                        },
                        new
                        {
                            ID = 2,
                            Damage = 8,
                            Name = "Axe"
                        },
                        new
                        {
                            ID = 3,
                            Damage = 4,
                            Name = "Dagger"
                        },
                        new
                        {
                            ID = 4,
                            Damage = 2,
                            Name = "Cloak"
                        },
                        new
                        {
                            ID = 5,
                            Damage = 9,
                            Name = "Bow"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Player", b =>
                {
                    b.HasOne("DataAccess.Entities.Character", "Character")
                        .WithMany("Player")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Race", "Race")
                        .WithMany("Player")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Weapon", "Weapon")
                        .WithMany("Player")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Race");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("DataAccess.Entities.Character", b =>
                {
                    b.Navigation("Player");
                });

            modelBuilder.Entity("DataAccess.Entities.Race", b =>
                {
                    b.Navigation("Player");
                });

            modelBuilder.Entity("DataAccess.Entities.Weapon", b =>
                {
                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
